# [opc@testinstance ~]$ cat /etc/nginx/sites-enabled/expenseapp
#live in opracle server acting as https termination endpoint for both expense app and proessional portfoilio 
# Default server block for HTTP requests
server {
    listen 80 default_server;  # Listen on port 80 for IPv4
    listen [::]:80 default_server;  # Listen on port 80 for IPv6
    server_name _;  # Catch-all server name

    return 444;  # Close the connection without sending a response
}

# Default server block for HTTPS requests
server {
    listen 443 ssl default_server;  # Listen on port 443 for IPv4 with SSL
    listen [::]:443 ssl default_server;  # Listen on port 443 for IPv6 with SSL
    server_name _;  # Catch-all server name

    # SSL certificate and key
    ssl_certificate /etc/letsencrypt/live/expenseapp.devopschad.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/expenseapp.devopschad.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;  # Supported SSL protocols
    ssl_ciphers HIGH:!aNULL:!MD5;  # Supported SSL ciphers

    return 444;  # Close the connection without sending a response
}

# Server block for expenseapp.devopschad.com on HTTP
server {
    listen 80;  # Listen on port 80
    server_name expenseapp.devopschad.com;  # Server name

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# Server block for expenseapp.devopschad.com on HTTPS
server {
    listen 443 ssl;  # Listen on port 443 with SSL
    server_name expenseapp.devopschad.com;  # Server name

    # SSL certificate and key
    ssl_certificate /etc/letsencrypt/live/expenseapp.devopschad.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/expenseapp.devopschad.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;  # Supported SSL protocols
    ssl_ciphers HIGH:!aNULL:!MD5;  # Supported SSL ciphers

    # Access and error logs
    access_log /var/log/nginx/expenseapp.access.log;
    error_log /var/log/nginx/expenseapp.error.log;

    # Proxy settings for /api/ endpoint
    location /api/ {
        proxy_pass http://172.18.0.3:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy settings for root endpoint
    location / {
        proxy_pass http://172.18.0.3:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# Server block for devopschad.com and www.devopschad.com on HTTP
server {
    listen 80;  # Listen on port 80
    server_name devopschad.com www.devopschad.com;  # Server names

    # Location for Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# Server block for devopschad.com and www.devopschad.com on HTTPS
server {
    listen 443 ssl;  # Listen on port 443 with SSL
    server_name devopschad.com www.devopschad.com;  # Server names

    # SSL certificate and key
    ssl_certificate /etc/letsencrypt/live/devopschad.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/devopschad.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;  # Supported SSL protocols
    ssl_ciphers HIGH:!aNULL:!MD5;  # Supported SSL ciphers

    # Access and error logs
    access_log /var/log/nginx/devopschad.access.log;
    error_log /var/log/nginx/devopschad.error.log;

    # Proxy settings for /api/ endpoint
    location /api/ {
        proxy_pass http://172.18.0.2:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy settings for root endpoint
    location / {
        proxy_pass http://172.18.0.2:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}



#old, new above
# server {
#     listen 80;
#     server_name expenseapp.devopschad.com;

#     # Redirect all HTTP requests to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name expenseapp.devopschad.com;

#     ssl_certificate /etc/letsencrypt/live/expenseapp.devopschad.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/expenseapp.devopschad.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     access_log /var/log/nginx/expenseapp.access.log;
#     error_log /var/log/nginx/expenseapp.error.log;

#     location /api/ {
#         proxy_pass http://backend2:8001;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location / {
#         proxy_pass http://backend2:8001;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
# }

# server {
#     listen 80;
#     server_name devopschad.com www.devopschad.com;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # Redirect all HTTP requests to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name devopschad.com www.devopschad.com;

#     ssl_certificate /etc/letsencrypt/live/devopschad.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/devopschad.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     access_log /var/log/nginx/devopschad.access.log;
#     error_log /var/log/nginx/devopschad.error.log;

#     location /api/ {
#         proxy_pass http://backend1:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location / {
#         proxy_pass http://backend1:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
# }


# #this works and was running prior to moving to docker-compose and private network to as to not expose the app to the public internet..that docker-compose nginx config code is above
# server {
#     listen 80;
#     server_name expenseapp.devopschad.com;

#     # Redirect all HTTP requests to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name expenseapp.devopschad.com;

#     ssl_certificate /etc/letsencrypt/live/expenseapp.devopschad.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/expenseapp.devopschad.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     access_log /var/log/nginx/expenseapp.access.log;
#     error_log /var/log/nginx/expenseapp.error.log;

#     location / {
#         proxy_pass http://localhost:8001;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
# }

# server {
#     if ($host = www.devopschad.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     if ($host = devopschad.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     listen 80;
#     server_name devopschad.com www.devopschad.com;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # Redirect all HTTP requests to HTTPS
#     #return 301 https://$host$request_uri;




# }

# server {
#     listen 443 ssl;
#     server_name devopschad.com www.devopschad.com;

#     ssl_certificate /etc/letsencrypt/live/devopschad.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/devopschad.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     access_log /var/log/nginx/devopschad.access.log;
#     error_log /var/log/nginx/devopschad.error.log;

#     location / {
#         proxy_pass http://localhost:8000;  # Update this to the correct backend for devopschad.com
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     ssl_certificate /etc/letsencrypt/live/devopschad.com/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/devopschad.com/privkey.pem; # managed by Certbot

# }